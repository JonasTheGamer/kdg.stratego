Index: src/be/kdg/Stratego/Klassen/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package be.kdg.Stratego.Klassen;\r\nimport be.kdg.Stratego.CustomUtil.AskUtility;\r\n\r\nimport java.io.*;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.time.LocalDateTime;\r\nimport java.util.Scanner;\r\n\r\npublic class Game {\r\n    private Speler[] spelers;\r\n    private LocalDateTime startTijd;\r\n    private LocalDateTime eindTijd;\r\n    private Scanner keyboard = new Scanner(System.in);//Comment Liam: Onnodige door klasse AskUtility?\r\n    private boolean ongoing = false;\r\n    private Speelbord speelbord;\r\n\r\n    public Game() {\r\n        this.speelbord = new Speelbord();\r\n    }\r\n\r\n    public Speler[] getSpelers() {\r\n        return spelers;\r\n    }\r\n\r\n    public void setSpelers(Speler[] spelers) {\r\n        this.spelers = spelers;\r\n    }\r\n\r\n    public LocalDateTime getStartTijd() {\r\n        return startTijd;\r\n    }\r\n\r\n    public void setStartTijd(LocalDateTime startTijd) {\r\n        this.startTijd = startTijd;\r\n    }\r\n\r\n    public LocalDateTime getEindTijd() {\r\n        return eindTijd;\r\n    }\r\n\r\n    public void setEindTijd(LocalDateTime eindTijd) {\r\n        this.eindTijd = eindTijd;\r\n    }\r\n\r\n    public void start() {\r\n        ongoing = true;\r\n        this.startTijd = LocalDateTime.now();\r\n    }\r\n\r\n    public boolean opslaan() {\r\n        // Check to allow for a loop that keeps asking for a valid file location\r\n        boolean fileOk = false;\r\n        boolean fileSaved = false;\r\n\r\n        // Check if the game has already been started\r\n        if(!ongoing) {\r\n            System.out.println(\"The game has to be started before you can save its progress.\");\r\n            return false;\r\n        }\r\n\r\n        // Initialize file path\r\n        String filePath = \"\";\r\n\r\n        // Find out which file we need to save to\r\n        while (!fileOk) {\r\n            // Ask for the the file location where we should save the game's progress (later on this will be done with a dialogbox)\r\n            filePath = AskUtility.askString(\"Where do you want to save the progress? (please include a .txt filename)\", true);\r\n            System.out.println(\"Alright, saving to \" + filePath + \" .\");\r\n\r\n            // Create the file. If it already exists, ask if we can overwrite it.\r\n            try {\r\n                File myObj = new File(filePath);\r\n                if (myObj.createNewFile()) {\r\n                    // File was successfully created\r\n                    fileOk = true;\r\n                } else {\r\n                    // File already exists. Ask user if they want to overwrite it.\r\n                    fileOk = AskUtility.askBoolean(\"The file already exists. Do you want to overwrite it? (yes, no)\", true);\r\n                }\r\n            } catch (IOException e) {\r\n                System.out.println(\"An error occurred whilst trying to check if the file already exists. Please make sure the path is valid.\");\r\n                fileOk = false;\r\n            }\r\n        };\r\n\r\n        // Let the saving begin!\r\n        try {\r\n            PrintWriter writer = new PrintWriter(filePath, StandardCharsets.UTF_8);\r\n            writer.println(\"Hello, world!\");\r\n            writer.println(\"The writing works, woohoo!\");\r\n            writer.close();\r\n\r\n            System.out.println(\"The game's progress has been saved successfully. Congratulations!\");\r\n            fileSaved = true;\r\n\r\n        } catch (FileNotFoundException | UnsupportedEncodingException exc){\r\n            System.out.println(\"Something went wrong whilst trying to save your progress. Please try again at a later time.\");\r\n            fileSaved = false;\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            fileSaved = false;\r\n        }\r\n\r\n        if(fileSaved) {\r\n            // Stop the game when it's saved.\r\n            this.stop();\r\n        }\r\n        return fileSaved;\r\n    }\r\n\r\n    public void hervat(Speelbord speelbord) {\r\n        // Resume the timer\r\n    }\r\n\r\n    public void stop() {\r\n        ongoing = false;\r\n        this.eindTijd = LocalDateTime.now();\r\n        System.out.println(\"The game has been stopped.\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/be/kdg/Stratego/Klassen/Game.java b/src/be/kdg/Stratego/Klassen/Game.java
--- a/src/be/kdg/Stratego/Klassen/Game.java	(revision 4faf5e9a1868d0edb31a27eb6e32390e945e2477)
+++ b/src/be/kdg/Stratego/Klassen/Game.java	(date 1640338669453)
@@ -10,7 +10,6 @@
     private Speler[] spelers;
     private LocalDateTime startTijd;
     private LocalDateTime eindTijd;
-    private Scanner keyboard = new Scanner(System.in);//Comment Liam: Onnodige door klasse AskUtility?
     private boolean ongoing = false;
     private Speelbord speelbord;
 
